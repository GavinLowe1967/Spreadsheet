// The factorial function
def fact(n: Int) : Int = 
  if(n <= 1) 1 else n*fact(n-1)

def sum(xs: List[Int]): Int = 
  if(isEmpty(xs)) 0 else head(xs) + sum(tail(xs))

def apply[A,B](f: A => B, x: A): B = f(x)

def double(y: Float): Float = 2.0*y

// =======================================================

// Simple tests in row 0
#A0 = apply(double, 3.0) 
#B0 = sum([1,2,3,4])
#C0 = 1/0 // Evaluation error
#D0 = 3; #D0 = 4.0 // Evaluation error
val hello = "Hello"; #E0 = hello

// factorials, rows 1-4
for(r <- #1 to #4; c <- [#B, #C]; if r != #2){
  Cell(c, r) = fact(Cell(#A,r): Int)
}

// This test checks the inner declaration of flag doesn't leak. 
val flag = true
for(r <- #5 to #6; if r == #6 || flag){ 
  Cell(#A, r) = flag; val flag = false 
}  